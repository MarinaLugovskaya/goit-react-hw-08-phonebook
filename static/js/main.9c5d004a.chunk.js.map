{"version":3,"sources":["redux/auth/auth-selectors.js","redux/auth/auth-slice.js","redux/store.js","components/Container/Container.js","components/UserMenu/Navigation.js","components/UserMenu/UserMenu.js","components/UserMenu/AuthNav.js","components/UserMenu/AppBar.js","components/App.jsx","index.js","redux/auth/auth-operations.js","redux/contacts/contacts-slice.js","redux/contacts/filter-slice.js"],"names":["authSelectors","getLoggedIn","state","auth","isLoggedIn","getUserName","user","name","authSlice","createSlice","initialState","email","token","extraReducers","authOperations","register","fulfilled","action","payload","logIn","logOut","authPersistConfig","getDefaultMiddleware","logger","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contactsApi","reducerPath","filter","middleware","persistor","persistStore","Container","children","Navigation","exact","to","UserMenu","dispatch","useDispatch","useSelector","type","onClick","AuthNav","axact","AppBar","HomeView","lazy","LoginView","RegisterView","ContactsView","App","fallback","color","height","width","path","ReactDOM","render","StrictMode","loading","document","getElementById","axios","defaults","baseURL","headers","common","Authorization","createAsyncThunk","credentials","a","post","data","console","log","operations","createApi","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","newContact","body","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","filterSlice","reducers","actions"],"mappings":"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","file":"static/js/main.9c5d004a.chunk.js","sourcesContent":["const getLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nconst authSelectors = {\r\n  getLoggedIn,\r\n  getUserName,\r\n};\r\n\r\nexport default authSelectors;","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport authOperations from '../auth/auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null},\r\n  token: null,\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null};\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;","// import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import logger from 'redux-logger';\n// import {contactsApi} from './contacts/contacts-slice';\n// import filter from '../redux/contacts/filter-slice';\n\n// const middleware = [...getDefaultMiddleware(), logger];\n\n// const store = configureStore({\n//   reducer: {\n//     [contactsApi.reducerPath]: contactsApi.reducer, \n//     filter,\n//   },\n//   middleware: getDefaultMiddleware => [\n//     ...getDefaultMiddleware(),\n//     contactsApi.middleware,\n//   ],\n// });\n\n// export default store;\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { authReducer } from './auth';\nimport logger from 'redux-logger';\nimport { contactsApi } from './contacts/contacts-slice';\nimport filter from '../redux/contacts/filter-slice';\n\nconst middleware = [...getDefaultMiddleware(), logger];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    [contactsApi.reducerPath]: contactsApi.reducer, \n    filter,\n  },\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware(),\n    contactsApi.middleware,\n  ],\n});\nexport default store;\nexport const persistor = persistStore(store);","export default function Container({ children }) {\r\n  return <div>{children}</div>;\r\n}","import { NavLink } from 'react-router-dom';\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        exact\r\n        to=\"/\"\r\n        // className={css.link}\r\n        // activeClassName={css.activeLink}\r\n      >\r\n        Home\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        to=\"/contacts\"\r\n        // className={css.link}\r\n        // activeClassName={css.activeLink}\r\n      >\r\n        Contacts\r\n      </NavLink>\r\n\r\n    </nav>\r\n  );\r\n}","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\n\r\nexport default function UserMenu () {\r\n\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUserName);\r\n  return (\r\n    <div>\r\n<span>Welcome, {name}</span>\r\n<button type='button' onClick={() => dispatch(authOperations.logOut())}>Add</button>\r\n\r\n  </div>\r\n  )\r\n  }","import { NavLink } from 'react-router-dom';\r\n \r\n export default function AuthNav() {\r\n   return (\r\n     <>\r\n        <NavLink\r\n        to=\"/register\" axact\r\n      >\r\n        Register\r\n      </NavLink>\r\n\r\n        <NavLink\r\n        to=\"/login\"\r\n      >\r\n        Login\r\n      </NavLink>\r\n      </>\r\n   )\r\n }","import { useSelector } from \"react-redux\";\r\n\r\nimport Navigation from \"../UserMenu/Navigation\";\r\nimport UserMenu from '../UserMenu/UserMenu';\r\nimport AuthNav from '../UserMenu/AuthNav';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getLoggedIn)\r\n  return (\r\n    <>\r\n    <header>\r\n  <Navigation />\r\n  {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n  </>\r\n  )\r\n\r\n}","import { Switch, Route } from 'react-router-dom';\nimport { lazy, Suspense } from 'react';\nimport Loader from 'react-loader-spinner';\n\nimport React, { Component } from 'react';\nimport Container from '../components/Container/Container';\nimport AppBar from '../components/UserMenu/AppBar';\n\n// const NotFoundView = lazy(() => import('../views/NotFoundView/NotFoundView'));\nconst HomeView = lazy(() => import('../views/HomeView/HomeView'));\nconst LoginView = lazy(() => import('../views//LoginView/LoginView'));\nconst RegisterView = lazy(() => import('../views/RegisterView/RegisterView'));\nconst ContactsView = lazy(() => import('../views/ContactsView/ContactsView'));\n\nexport default function App() {\n  return (\n    <>\n      <Container>\n        <AppBar />\n        <Suspense fallback={<Loader type=\"Puff\" color=\"#00BFFF\" height={80} width={80} />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <HomeView />\n            </Route>\n\n            <Route path=\"/login\" exact>\n              <LoginView />\n            </Route>\n\n            <Route path=\"/register\">\n              <RegisterView />\n            </Route>\n\n            <Route path=\"/contacts\">\n              <ContactsView />\n            </Route>\n          </Switch>\n        </Suspense>\n\n        {/* <Contacts /> */}\n      </Container>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistor }  from './redux/store';\nimport  {store}  from './redux/store';\nimport { Provider } from 'react-redux';\nimport App from './components/App.jsx';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n    <BrowserRouter>\n      <App />\n      </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset(token) {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = createAsyncThunk('auth/register', async credentials => {\r\n  try{\r\n    const {data} = await axios.post('/users/signup', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch(error) {console.log(error)\r\n}\r\n});\r\n\r\nconst logIn = createAsyncThunk('auth/login', async credentials => {\r\n  try {\r\n    const {data} = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch(error) {console.log(error)};\r\n});\r\n\r\n  const logOut = createAsyncThunk('auth/logout', async () => {\r\n    try {\r\n      // const {data} = await axios.post('/users/logout');\r\n      await axios.post('/users/logout');\r\n      token.unset();\r\n      // return data;\r\n    } catch(error) {console.log(error)};\r\n});\r\n\r\nconst operations = {\r\n  register,\r\n  logIn,\r\n  logOut\r\n};\r\nexport default operations;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const contactsApi = createApi({\n  reducerPath: 'contactsApi',\n  baseQuery: fetchBaseQuery({ baseUrl: 'https://616b374416c3fa001717162e.mockapi.io/api/v1/' }),\n  tagTypes: ['Contact'],\n  endpoints: (builder) => ({\n    fetchContacts: builder.query({\n      query: () => `/contacts`,\n      providesTags: ['Contact'],\n    }),\n    deleteContact: builder.mutation({\n      query: (contactId) => ({\n        url: `/contacts/${contactId}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n    createContact: builder.mutation({\n      query: newContact => ({\n        url: '/contacts',\n        method: 'POST',\n        body: newContact,\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n  }),\n})\n\nexport const { useFetchContactsQuery, useDeleteContactMutation, useCreateContactMutation } = contactsApi;","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = '';\n\nconst filterSlice = createSlice({\n  name: \"contacts/filter\",\n  initialState,\n  reducers: {\n    filter: (state, action) => (state = action.payload),\n  },\n});\nexport const { filter } = filterSlice.actions;\nexport default filterSlice.reducer;"],"sourceRoot":""}