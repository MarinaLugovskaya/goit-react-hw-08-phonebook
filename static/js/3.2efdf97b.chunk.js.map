{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Filter/Filter.module.css","components/Contacts/Contacts.module.css","redux/contacts/contacts-selectors.js","components/Filter/Filter.jsx","components/Contacts/Contacts.jsx","views/ContactsView/ContactsView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","getFilter","state","filter","Filter","useSelector","dispatch","useDispatch","className","css","text","input","type","name","onChange","evt","target","Contacts","onDelete","deleting","useFetchContactsQuery","data","filterValue","contactsFilter","contact","toLowerCase","includes","title","map","item","number","button","onClick","id","ContactsView","contacts","isFetching","useDeleteContactMutation","deleteContact","isDeleting","isLoading","color","height","width","timeout"],"mappings":"8LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,oBIJtGC,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,KAAO,uB,oBCAvDD,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,KAAO,uBAAuB,KAAO,uBAAuB,OAAS,2B,+HCA1GC,EAAY,SAAAC,GAAK,OAAIA,EAAMC,Q,iCCyBzBC,EApBA,WACb,IAAMV,EAAQW,YAAYJ,GACpBK,EAAWC,cAEjB,OACE,mCACE,wBAAOC,UAAWC,IAAIC,KAAtB,kCAEE,uBACEF,UAAWC,IAAIE,MACfC,KAAK,OACLC,KAAK,SACLnB,MAAOA,EACPoB,SAAU,SAAAC,GAAG,OAAIT,EAASH,YAAOY,EAAIC,OAAOtB,iB,0BCmBvCuB,EA/BE,YAA6B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACdF,EAAaG,cAAnBC,KACFC,EAAcjB,aAAY,SAAAH,GAAK,OAAID,EAAUC,MAC7CqB,EAAc,OAAGN,QAAH,IAAGA,OAAH,EAAGA,EAAUd,QAAO,SAAAqB,GAAO,OAC7CA,EAAQX,KAAKY,cAAcC,SAASJ,EAAYG,kBAOlD,OACE,qCACE,oBAAIjB,UAAWC,IAAIkB,MAAnB,sBACA,6BACGV,GACCM,EAAeK,KAAI,SAAAJ,GAAO,OACxB,qBAAIhB,UAAWC,IAAIoB,KAAnB,UACE,oBAAGrB,UAAWC,IAAIC,KAAlB,UACGc,EAAQX,KADX,KACmBW,EAAQM,UAE3B,wBAAQtB,UAAWC,IAAIsB,OAAQC,QAAS,kBAAMd,EAASM,EAAQS,KAAKrB,KAAK,SAAzE,SACGO,EAAW,cAAgB,aALFK,EAAQS,a,mCCZnC,SAASC,IACtB,MAAuCd,cAAzBe,EAAd,EAAQd,KAAgBe,EAAxB,EAAwBA,WACxB,EAAmDC,cAAnD,mBAAOC,EAAP,KAAmCC,EAAnC,KAAwBC,UAExB,OACE,qCACE,cAAC,IAAD,IACA,cAAC,EAAD,IACCJ,GACC,cAAC,IAAD,CACExB,KAAK,UACL6B,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,MAGZT,GACC,cAAC,EAAD,CACEA,SAAUA,EACVjB,SAAUoB,EACVnB,SAAUoB","file":"static/js/3.2efdf97b.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3V5WF\",\"text\":\"Filter_text__I9iT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Contacts_title__34IlY\",\"text\":\"Contacts_text__1h6Ah\",\"item\":\"Contacts_item__3Pb7_\",\"button\":\"Contacts_button__3Mv5y\"};","export const getContacts = state => state.contacts;\nexport const getFilter = state => state.filter;","import PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport { filter } from '../../redux/contacts/filter-slice';\r\nimport css from '../../components/Filter/Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <label className={css.text}>\r\n        Find contacts by name\r\n        <input\r\n          className={css.input}\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={value}\r\n          onChange={evt => dispatch(filter(evt.target.value))}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n// import { getVisibleContacts } from \"../../redux/contacts/contacts-selectors\";\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport { useFetchContactsQuery } from '../../redux/contacts/contacts-slice';\r\nimport css from '../Contacts/Contacts.module.css';\r\n\r\nconst Contacts = ({ onDelete, deleting }) => {\r\n  const { data: Contacts } = useFetchContactsQuery();\r\n  const filterValue = useSelector(state => getFilter(state));\r\n  const contactsFilter = Contacts?.filter(contact =>\r\n    contact.name.toLowerCase().includes(filterValue.toLowerCase()),\r\n  );\r\n  // const dispatch = useDispatch();\r\n  // const contacts = useSelector(getVisibleContacts);\r\n\r\n  // const onClick = (id) => dispatch(contactsActions.deleteContacts(id));\r\n\r\n  return (\r\n    <>\r\n      <h2 className={css.title}>Contacts</h2>\r\n      <ul>\r\n        {Contacts &&\r\n          contactsFilter.map(contact => (\r\n            <li className={css.item} key={contact.id}>\r\n              <p className={css.text}>\r\n                {contact.name}: {contact.number}\r\n              </p>\r\n              <button className={css.button} onClick={() => onDelete(contact.id)} type=\"button\">\r\n                {deleting ? 'Deleting...' : 'Delete'}\r\n              </button>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n","import React from 'react';\r\nimport  Filter  from '../../components/Filter/Filter';\r\nimport  Contacts  from '../../components/Contacts/Contacts';\r\nimport  Form  from '../../components/Form/Form';\r\n\r\nimport {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useCreateContactMutation,\r\n} from \"../../redux/contacts/contacts-slice\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default function ContactsView() {\r\n  const { data: contacts, isFetching } = useFetchContactsQuery();\r\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\r\n\r\n  return (\r\n    <>\r\n      <Form />\r\n      <Filter />\r\n      {isFetching && (\r\n        <Loader\r\n          type=\"Circles\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000}\r\n        />\r\n      )}\r\n      {contacts && (\r\n        <Contacts\r\n          contacts={contacts}\r\n          onDelete={deleteContact}\r\n          deleting={isDeleting}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}"],"sourceRoot":""}